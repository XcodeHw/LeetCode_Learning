/*******************************************/
X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.

A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other; 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.

Now given a positive number N, how many numbers X from 1 to N are good?

Example:
Input: 10
Output: 4
Explanation: 
There are four good numbers in the range [1, 10] : 2, 5, 6, 9.
Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.

/******************************************/
class Solution {
public:
	int rotatedDigits(int N) {
	  int n = 0;
        for (int i = 1; i <= N; i++ )
        {
           if( isGoodNum(i) )
               n++;
        }
        
        return n;
        
    }
    
    bool isGoodNum(int i)
    {
        string s = to_string(i);
        for(auto a = s.begin(); a != s.end(); a++ )
            {
                if(*a == '3' || *a == '4' || *a == '7' )
                    return false;
                
                switch(*a)
                {
                    case '2':
                        *a = '5';
                        break;
                    case '5':
                        *a = '2';
                        break;
                    case '6':
                        *a = '9';
                        break;
                    case '9':
                        *a = '6';
                        break;
                    default:
                        break;
                }
            }
        int newi = stoi(s);
        
        if(newi == i)
            return false;
        return true;
        
    }
};
