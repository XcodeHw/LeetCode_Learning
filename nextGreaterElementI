/********************************/
You are given two arrays (without duplicates) nums1 and nums2 where nums1â€™s elements are subset of nums2. Find all the next greater numbers for nums1's elements in the corresponding places of nums2.

The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number.

Example 1:
Input: nums1 = [4,1,2], nums2 = [1,3,4,2].
Output: [-1,3,-1]
Explanation:
    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
    For number 1 in the first array, the next greater number for it in the second array is 3.
    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.
Example 2:
Input: nums1 = [2,4], nums2 = [1,2,3,4].
Output: [3,-1]
Explanation:
    For number 2 in the first array, the next greater number for it in the second array is 3.
    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.
Note:

/*********************************/

class Solution {
public:
	vector<int>nextGreaterElement(vector<int>&findNums, vector<int>&nums) {
		int size1 = findNums.size();
		int size2 = nums.size();
		vector<int>res;
		for (int i = 0; i < size1; i++) {
			int ind = findIndex(findNums[i],nums);
			if (ind == size2 - 1) {
				res.push_back(-1);
			}
		
			for (int j = ind + 1; j < size2; j++) {
				if (nums[j] > findNums[i]) {
					res.push_back(nums[j]);
					break;
				}
				if (nums[j] <=findNums[i]) {
					if (j == size2 - 1) {
						res.push_back(-1);
					}
				}
			}
		}
		
		return res;
	}
	int findIndex(int  n, vector<int> re) {
		
		int size = re.size();
		for (int i = 0; i < size; i++) {
			if (re[i] == n) {
				return i;
			}
		}
		return 0;
	}
};
