/**********************************/
At a lemonade stand, each lemonade costs $5. 

Customers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).

Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.

Note that you don't have any change in hand at first.

Return true if and only if you can provide every customer with correct change.

 

Example 1:

Input: [5,5,5,10,20]
Output: true
Explanation: 
From the first 3 customers, we collect three $5 bills in order.
From the fourth customer, we collect a $10 bill and give back a $5.
From the fifth customer, we give a $10 bill and a $5 bill.
Since all customers got correct change, we output true.
/**********************************/
class Solution {
public:
	bool lemonadeChange(vector<int>& bills) {
		int size = bills.size();
		vector<int>res;
		map<int, int>mp;
		mp[5] = 0;
		
		mp[10] = 0;
		mp[20] = 0;
		if (bills[0] > 5) {
			return false;
		}
		else {
			mp[5]++;
		}
		for (int i = 1; i < size; i++) {
			if (bills[i] - 5 == 0) {
				mp[5]++;
				
			}
			if (bills[i] - 5 == 5) {
				
				if (mp[5] < 0) {
					return false;
				}
				else {
					mp[5]--;
					mp[10]++;
				}
			}
			if (bills[i] - 5 == 15) {
			if(mp[10]==0){
              if(mp[5]<3){
                  return false;
              }  else{
                  mp[5]-=3;
              }
            }else{
                mp[5]--;
                mp[10]--;
            }
                
			}
            if(mp[5]<0||mp[10]<0){
                return false;
            }
           
		}
		return true;
	}
};
