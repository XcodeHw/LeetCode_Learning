
/*******************************************/

Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj >= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.

Note:
You may assume the greed factor is always positive. 
You cannot assign more than one cookie to one child.

Example 1:
Input: [1,2,3], [1,1]

Output: 1

Explanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. 
And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.
You need to output 1.

/*********************************************/

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class Solution {
public:
	int findContentChildren(vector<int>&g, vector<int>&s) {
		sort(g.begin(), g.end());
		sort(s.begin(), s.end());
		int gsize = g.size();
		int ssize = s.size();
		int count = 0;
		int gsize2 = gsize;
		int ssize2 = ssize;
		
			while (ssize2>0&&gsize2>0) {
				if (s[ssize2 - 1] >= g[gsize2 - 1]) {
					count++;
					ssize2 = ssize2 - 1;
					gsize2 = gsize2 - 1;
				}
				else if (s[ssize2 - 1] < g[gsize2 - 1]) {
					gsize2 = gsize2 - 1;
				}
				
			}
			return count;
	}
};
