/*******************************/
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.


/********************************/

class Solution {
public:
	bool wordPattern(string pattern, string str) {
		int size = pattern.size();
		vector<string>re;
		re = getStr(str);
		int size2 = re.size();
		if (size != size2) {
			return false;
		}
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				if ( pattern[i] == pattern[j]) {
					if(re[i]!=re[j]){
						return false;
					}
					
				}
				if (pattern[i] != pattern[j]) {
					if (re[i] == re[j]) {
						return false;
					}
				}
			}
}
		return true;

	}

	vector<string> getStr(string s) {
		vector<string>res;
		string word;
		stringstream ss(s);
		while (ss >> word)res.push_back(word);
		return res;
		
	}
};
