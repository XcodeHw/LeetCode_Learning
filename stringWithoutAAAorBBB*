/***************************************************/
Given two integers A and B, return any string S such that:

S has length A + B and contains exactly A 'a' letters, and exactly B 'b' letters;
The substring 'aaa' does not occur in S;
The substring 'bbb' does not occur in S.
 

Example 1:

Input: A = 1, B = 2
Output: "abb"
Explanation: "abb", "bab" and "bba" are all correct answers.
Example 2:

Input: A = 4, B = 1
Output: "aabaa"
 

Note:

0 <= A <= 100
0 <= B <= 100
It is guaranteed such an S exists for the given A and B.

/************************************************/
class Solution {
public:string strWithout3a3b (int A, int B) {
		string result = "";
		if (A >= B)
		{
			int t = A / (B + 1);
			int r = A % (B + 1);
			for (int i = 0; i<B + 1; i++)
			{
				for (int j = 0; j<t; j++)
					result += 'a';
				if (r != 0)
				{
					result += 'a';
					r--;
				}
				if (i<B)
					result += 'b';
			}

		}
		else
		{
			int t = B / (A + 1);
			int r = B % (A + 1);
			for (int i = 0; i<A + 1; i++)
			{
				for (int j = 0; j<t; j++)
					result += 'b';
				if (r != 0)
				{
					result+= 'b';
					r--;
				}
				if (i<A)
					result += 'a';
			}
		}
		return result;
	}
};
