/********************/
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:

The number of elements initialized in nums1 and nums2 are m and n respectively.
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]
/***********************/
class Solution {
public:
	void merge(vector<int>&nums1, int m, vector<int>&nums2, int n) {
		vector<int>::iterator it = nums1.begin();
		int flag = 0;
		for (; it != nums1.end();) {
			if (flag >m-1) {
				it = nums1.erase(nums1.begin()+m,nums1.end());
			}
			else {
				flag++;
				++it;
			}
		}
		for (int i = 0; i < n; i++) {
			nums1.push_back(nums2[i]);
		}
		sort(nums1.begin(), nums1.end());
	}
};
//i have no to find zhe best solution,Now i will be busy，In the future ，i will write it again,The complexity will be taken into account
