/**************************/
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false
/**************************/
class Solution {
public:
	bool containsNearbyDuplicate(vector<int>&nums, int k) {
		int size = nums.size();
		for (int i = 0; i < size; i++) {
			for (int j = i + 1; j < size; j++) {
				if (nums[i] == nums[j]&&abs(i-j)<=k) {
					return true;
				}
			}
		}
		return false;
	}
};
/*****************************/ first i used this Solution 
/**************************/ actuallyï¼Œuse map ,it is better than mine
bool containsNearDuplicate2(vector<int>&nums, int k) {
		int size = nums.size();
		hash_map<int, int>hmap;
		for (int i = 0; i < size; i++) {
			if (hmap.count(nums[i]) > 0) {
				int sub = i - hmap[nums[i]];
				if (sub <= k)
				{
					return true;
				}
				else {
					hmap[nums[i]] = i;
				}
			}
			else {
				hmap[nums[i]] = i;
			}
		}
		return false;
	}
};

