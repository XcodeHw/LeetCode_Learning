
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7









//////////////////////////////////////////


class Solution {
public:
	int minDepth(TreeNode *root) {
		if (root == NULL) {
			return 0;
		}
		if (root->left == NULL && root->right == NULL) {
			return 1;
		}
		if (root->left == NULL) {
			return minDepth(root->right)+1;
		}
		if (root->right == NULL) {
			return minDepth(root->left)+1;
		}
		return minDepth(root->right) > minDepth(root->left) ? minDepth(root->left)+1 : minDepth(root->right)+1;
	}
};
