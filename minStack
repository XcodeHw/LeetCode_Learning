/**************************************/
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
getMin() -- Retrieve the minimum element in the stack.
Example:
MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --> Returns -3.
minStack.pop();
minStack.top();      --> Returns 0.
minStack.getMin();   --> Returns -2.
/***********************************/
class MinStack {
public :
	vector<int>result;

	
	MinStack() {

	}

	void push(int x) {
		result.push_back(x);
	}
	void pop() {
		result.pop_back();
	}

	int top() {
		return result.at(result.size() - 1);
	}
	int getMin() {

		auto  smallest = min_element(begin(result),end(result));
		return *smallest;
	}
  
};
/***************************/



